<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Autodidact by nature</title>
    <link>http://crisci.io/</link>
    <description>Recent content on Autodidact by nature</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 31 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://crisci.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>An Introduction to Kubernetes</title>
      <link>http://crisci.io/post/an-introduction-to-kubernetes/</link>
      <pubDate>Tue, 31 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://crisci.io/post/an-introduction-to-kubernetes/</guid>
      <description>

&lt;p&gt;In this post, i would like to introduce you to Kubernetes which is the most popular container scheduler these days.&lt;br&gt;
I will show you how to install a few important tools that you should be aware of and use in your day to day operations while managing your Kubernetes cluster(s).&lt;br&gt;
I will not go into great details but just give you an idea on what each tool does. More details and advanced use will come in my next posts.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I will cover the following topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating your own local Kubernetes installation with &lt;strong&gt;Minikube&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Administering your Kubernetes cluster(s) with &lt;strong&gt;kubectl&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Doing Continuous Delivery with &lt;strong&gt;Helm&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m running all the commands below from my MacOS ( little differences on Linux, good luck on Windows )&lt;/p&gt;

&lt;h1 id=&#34;first-came-docker&#34;&gt;First came Docker&lt;/h1&gt;

&lt;p&gt;To understand why, let&amp;rsquo;s first talk about Docker which is the most popular container solution these days.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;When Docker first came around, it tackled a few issues such as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Portability

&lt;ul&gt;
&lt;li&gt;Once your code is packaged in a container, it can be installed and run anywhere in the same way from your laptop to your Company infrastructure.&lt;br&gt;
No more will you hear the infamous &lt;strong&gt;&amp;ldquo;It works on my machine&amp;rdquo;&lt;sup&gt;TM&lt;/sup&gt;&lt;/strong&gt; ( ok well&amp;hellip; at least we are getting closer to this goal with Docker ).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Packaging

&lt;ul&gt;
&lt;li&gt;Your application comes together with its dependencies and specific userspace to run it under.&lt;br&gt;
You can store your containers in and retrieve them from a registry.&lt;br&gt;
Technically installing a container is as easy as installing an .rpm/.deb or other packaging format.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;then-came-kubernetes&#34;&gt;Then came Kubernetes&lt;/h1&gt;

&lt;p&gt;Kubernetes was developed by Google and open sourced in 2014 as a solution to manage and distribute your containers workloads:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kubernetes was inspired by Borg which is &lt;a href=&#34;https://research.google.com/pubs/pub43438.html&#34;&gt;Google internal cluster manager solution&lt;/a&gt;.&lt;br&gt;
 Google has one of, if not the biggest infrastructure in the world and they have a reputation for advanced engineering.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Kubernetes supports multiple providers such as &lt;a href=&#34;https://github.com/kubernetes/kubernetes/tree/master/pkg/cloudprovider/providers&#34;&gt;AWS,GCP,Openstack,Azure and more&lt;/a&gt;
 This is one of the reasons why Kubernetes is beautiful for me.It would definitely be easier to move between different cloud providers when you already have all your stuff&lt;br&gt;
 running inside containers in your Kubernetes cluster(s) although to be honest it&amp;rsquo;s also because you started using containers for your applications.&lt;/li&gt;
&lt;li&gt;It has a huge community behind it and an &lt;a href=&#34;https://kubernetes.io/docs/&#34;&gt;amazing and extensive documentation&lt;/a&gt;.&lt;br&gt;
 It&amp;rsquo;s also very popular on the markets (job offers) and that&amp;rsquo;s always a good sign for me.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;install-kubectl&#34;&gt;Install kubectl&lt;/h1&gt;

&lt;p&gt;kubectl is the tool that we use to administer our kubernetes cluster(s) from the cli:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;curl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/darwin/amd64/kubectl &amp;amp;&amp;amp; chmod +x kubectl &amp;amp;&amp;amp; sudo mv kubectl /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;here-comes-the-minikube&#34;&gt;Here comes the Minikube&lt;/h1&gt;

&lt;p&gt;We will first need to install &lt;strong&gt;docker-machine-driver-xhyve&lt;/strong&gt; to be able to run Minikube natively on our MacOS without using VirtualBox: &lt;a href=&#34;https://github.com/zchee/docker-machine-driver-xhyve&#34;&gt;https://github.com/zchee/docker-machine-driver-xhyve&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;brew upgrade docker-machine-driver-xhyve
sudo chown root:wheel /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
sudo chmod u+s /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once we are done installing xhyve, we can go ahead and start Minikube locally&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;minikube start --vm-driver xhyve
minikube status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should now have Minikube setup as the default context/cluster&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl get-contexts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You current cluster should now be set on your local Minikube&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;CURRENT   NAME       CLUSTER    AUTHINFO   NAMESPACE
*         minikube   minikube   minikube
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now let&amp;rsquo;s verify the client/server versions&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;Client Version: version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;5&amp;quot;, GitVersion:&amp;quot;v1.5.1&amp;quot;, GitCommit:&amp;quot;82450d03cb057bab0950214ef122b67c83fb11df&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;2016-12-14T00:57:05Z&amp;quot;, GoVersion:&amp;quot;go1.7.4&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;darwin/amd64&amp;quot;}
Server Version: version.Info{Major:&amp;quot;1&amp;quot;, Minor:&amp;quot;5&amp;quot;, GitVersion:&amp;quot;v1.5.1&amp;quot;, GitCommit:&amp;quot;82450d03cb057bab0950214ef122b67c83fb11df&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, BuildDate:&amp;quot;1970-01-01T00:00:00Z&amp;quot;, GoVersion:&amp;quot;go1.7.1&amp;quot;, Compiler:&amp;quot;gc&amp;quot;, Platform:&amp;quot;linux/amd64&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We are ready to deploy our first container ( Nginx )&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl run nginx --image=nginx --port=80 --replicas=3
kubectl get all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;NAME                        READY     STATUS    RESTARTS   AGE
po/nginx-3449338310-43sk1   1/1       Running   0          1m
po/nginx-3449338310-hbp5s   1/1       Running   0          1m
po/nginx-3449338310-lz06n   1/1       Running   0          1m

NAME             CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
svc/kubernetes   10.0.0.1     &amp;lt;none&amp;gt;        443/TCP   22m

NAME           DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
deploy/nginx   3         3         3            3           1m

NAME                  DESIRED   CURRENT   READY     AGE
rs/nginx-3449338310   3         3         3         1m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You now have created a deployment containing a pod named nginx which itself uses the nginx Docker image
It listens on port 80 and makes sure that 3 of these pods run at any time&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s delete a container and see how Kubernetes handles this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl delete po/nginx-3449338310-lz06n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ok that&amp;rsquo;s working as expected and now we are left with only &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; nginx containers.I&amp;rsquo;m expecting Kubernetes to do something about it because we defined our deployment to have 3 replicas&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl get pods
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;NAME                     READY     STATUS    RESTARTS   AGE
nginx-3449338310-43sk1   1/1       Running   0          11m
nginx-3449338310-hbp5s   1/1       Running   0          11m
nginx-3449338310-q7rrp   1/1       Running   0          5s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nice! As soon as we killed the container, we had Kubernetes restart another one as expected&lt;/p&gt;

&lt;p&gt;Now for the record, if you want to scale down you can run the following command ( obviously also work for scale up ):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl scale --current-replicas=3 --replicas=2 deployment/nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;kubectl get pods
NAME                     READY     STATUS    RESTARTS   AGE
nginx-3449338310-43sk1   1/1       Running   0          15m
nginx-3449338310-hbp5s   1/1       Running   0          15m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;You can also connect to the Kubernetes dashboard as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;minikube dashboard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;a-nightmare-on-helm-street&#34;&gt;A nightmare on Helm street&lt;/h1&gt;

&lt;p&gt;Helm is an awesome tool used to install/upgrade your software defined inside its own chart.&lt;br&gt;
This is the tool that i used to do continuous delivery on Kubernetes in my last project.It basically has 2 parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helm which is the client-side tool which parse a chart directory, read your defined global and environment values and generate deployment/services/secrets/etc resources files and pass them to Tiller which is running inside your Kubernetes.&lt;/li&gt;
&lt;li&gt;tiller is itself the software which will run internal Kubernetes commands based on your defined resources.It will also keep tracks on the various Helm deployments which will allow you to do various operations such as upgrades/rollbacks/etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will now demonstrate a quick Jenkins master deployment via Helm.&lt;/p&gt;

&lt;p&gt;First we need to install the Helm client on our laptop:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;curl http://storage.googleapis.com/kubernetes-helm/helm-v2.1.3-darwin-amd64.tar.gz | tar -xzf - -C /usr/local/bin/ --strip-components=1 darwin-amd64/helm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we run Helm for the first time to create our initial local config and deploy Tiller inside Kubernetes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;helm init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Give it a good 30 seconds depending on your internet connection and run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;helm version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should get the following output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;Client: &amp;amp;version.Version{SemVer:&amp;quot;v2.1.3&amp;quot;, GitCommit:&amp;quot;5cbc48fb305ca4bf68c26eb8d2a7eb363227e973&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;}
Server: &amp;amp;version.Version{SemVer:&amp;quot;v2.1.3&amp;quot;, GitCommit:&amp;quot;5cbc48fb305ca4bf68c26eb8d2a7eb363227e973&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let&amp;rsquo;s search for the Jenkins package to install:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;helm search jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;NAME          	VERSION	DESCRIPTION
stable/jenkins	0.1.8  	A Jenkins Helm chart for Kubernetes.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let&amp;rsquo;s install the chart inside Minikube:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;helm install --set Persistence.StorageClass=default stable/jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Notice the extra &lt;strong&gt;&amp;ndash;set Persistence.StorageClass=&amp;ldquo;&amp;rdquo;&lt;/strong&gt; added which temporarily fixes the following bug:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/charts/pull/530&#34;&gt;https://github.com/kubernetes/charts/pull/530&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the output of my installation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;NAME:   ironic-donkey
LAST DEPLOYED: Tue Jan 31 06:40:50 2017
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==&amp;gt; v1/Secret
NAME                    TYPE      DATA      AGE
ironic-donkey-jenkins   Opaque    2         1s

==&amp;gt; v1/ConfigMap
NAME                    DATA      AGE
ironic-donkey-jenkins   1         1s

==&amp;gt; v1/Service
NAME                    CLUSTER-IP   EXTERNAL-IP   PORT(S)                          AGE
ironic-donkey-jenkins   10.0.0.35    &amp;lt;pending&amp;gt;     8080:30822/TCP,50000:31757/TCP   1s

==&amp;gt; extensions/Deployment
NAME                    DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
ironic-donkey-jenkins   1         1         1            0           1s

==&amp;gt; v1/PersistentVolumeClaim
NAME                    STATUS    VOLUME                                     CAPACITY   ACCESSMODES   AGE
ironic-donkey-jenkins   Bound     pvc-34d6771b-e780-11e6-a309-da2274021699   8Gi        RWO           1s


NOTES:
1. Get your &amp;#39;admin&amp;#39; user password by running:
  printf $(kubectl get secret --namespace default ironic-donkey-jenkins -o jsonpath=&amp;quot;{.data.jenkins-admin-password}&amp;quot; | base64 --decode);echo

2. Get the Jenkins URL to visit by running these commands in the same shell:
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running &amp;#39;kubectl get svc --namespace default -w ironic-donkey-jenkins&amp;#39;
  export SERVICE_IP=$(kubectl get svc ironic-donkey-jenkins --namespace default --template &amp;quot;{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}&amp;quot;)
  echo http://$SERVICE_IP:8080/login

3. Login with the password from step 1 and the username: admin

For more information on running Jenkins on Kubernetes, visit:
https://cloud.google.com/solutions/jenkins-on-container-engine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We can see that the Jenkins chart defined some Kubernetes resources which are needed for the Jenkins master to run inside Kubernetes.&lt;br&gt;
Another cool feature of the chart packaging comes with the &lt;strong&gt;NOTES&lt;/strong&gt; output which gives you useful informations on how to start using the deployed service.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t forget to run step &lt;strong&gt;1.&lt;/strong&gt; from the &lt;strong&gt;NOTES&lt;/strong&gt; as we will need the password to login as &lt;strong&gt;admin&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s now grab the Jenkins service url:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;minikube service ironic-donkey-jenkins --url
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;http://192.168.64.9:30822
http://192.168.64.9:31757
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;You will get 2 urls and you should use the first one which will be your master url ( the second being your agent )&lt;br&gt;
Open your browser using the first url and you should be able to login as admin with the password that you grabbed above.&lt;/p&gt;

&lt;p&gt;Have a look at the &lt;a href=&#34;https://github.com/kubernetes/charts/tree/master/stable/jenkins&#34;&gt;Jenkins chart&amp;rsquo;s github repository&lt;/a&gt; to have an idea of what a chart is made of.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;

&lt;p&gt;You now have a locally installed Minikube which you can use to run your kubernetes tests before deploying it on your real cluster.&lt;br&gt;
While this post was simple and straightforward, deploying and maintaining Kubernetes clusters in different environments/clouds is not as simple and straightforward.&lt;br&gt;&lt;br&gt;
Many companies already offer &amp;ldquo;Managed Kubernetes&amp;rdquo; solutions to offload the burden of having to do so but we are engineers and we also love to design/implement/troubleshoot/maintain our stuff.&lt;br&gt;
Expect more posts to cover some Kubernetes components in details as my contribution to this amazing community who helped me a lot in the past months.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;resources&#34;&gt;Resources&lt;/h1&gt;

&lt;p&gt;Slack: &lt;a href=&#34;http://slack.k8s.io/&#34;&gt;http://slack.k8s.io/&lt;/a&gt;&lt;br&gt;
Github: &lt;a href=&#34;https://github.com/kubernetes&#34;&gt;https://github.com/kubernetes&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://crisci.io/contact/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://crisci.io/contact/</guid>
      <description>&lt;form class=&#34;pure-form pure-form-stacked&#34;&gt;
  &lt;fieldset&gt;
    &lt;div class=&#34;pure-g&#34;&gt;
      &lt;div class=&#34;pure-u-1 pure-u-md-1-3&#34;&gt;
        &lt;label for=&#34;first-name&#34;&gt;First Name&lt;/label&gt;
        &lt;input id=&#34;first-name&#34; class=&#34;pure-u-23-24&#34; type=&#34;text&#34;&gt;
      &lt;/div&gt;

      &lt;div class=&#34;pure-u-1 pure-u-md-1-3&#34;&gt;
        &lt;label for=&#34;last-name&#34;&gt;Last Name&lt;/label&gt;
        &lt;input id=&#34;last-name&#34; class=&#34;pure-u-23-24&#34; type=&#34;text&#34;&gt;
      &lt;/div&gt;

      &lt;div class=&#34;pure-u-1 pure-u-md-1-3&#34;&gt;
        &lt;label for=&#34;email&#34;&gt;E-Mail&lt;/label&gt;
        &lt;input id=&#34;email&#34; class=&#34;pure-u-23-24&#34; type=&#34;email&#34; required&gt;
      &lt;/div&gt;

      &lt;div class=&#34;pure-u-1 pure-u-md-1-3&#34;&gt;
        &lt;label for=&#34;city&#34;&gt;City&lt;/label&gt;
        &lt;input id=&#34;city&#34; class=&#34;pure-u-23-24&#34; type=&#34;text&#34;&gt;
      &lt;/div&gt;

      &lt;div class=&#34;pure-u-1 pure-u-md-1-3&#34;&gt;
        &lt;label for=&#34;state&#34;&gt;State&lt;/label&gt;
        &lt;select id=&#34;state&#34; class=&#34;pure-input-1-2&#34;&gt;
          &lt;option&gt;AL&lt;/option&gt;
          &lt;option&gt;CA&lt;/option&gt;
          &lt;option&gt;IL&lt;/option&gt;
        &lt;/select&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;fieldset class=&#34;pure-group&#34;&gt;
      &lt;input type=&#34;text&#34; class=&#34;pure-input-1-2&#34; placeholder=&#34;A title&#34;&gt;
      &lt;textarea class=&#34;pure-input-1-2&#34; placeholder=&#34;Your message&#34;&gt;&lt;/textarea&gt;
    &lt;/fieldset&gt;
    &lt;button type=&#34;submit&#34; class=&#34;pure-button pure-button-primary&#34;&gt;Send&lt;/button&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;
</description>
    </item>
    
    <item>
      <title>Customized Widgets</title>
      <link>http://crisci.io/services/widgets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://crisci.io/services/widgets/</guid>
      <description>&lt;p&gt;We specialize in bespoke widgets, built to your specification.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The mind behind this blog</title>
      <link>http://crisci.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://crisci.io/about/</guid>
      <description>

&lt;h3 id=&#34;a-brief-history-of-my-time-so-far&#34;&gt;A brief history of my time so far&lt;/h3&gt;

&lt;p&gt;My name is Laurent Crisci, autodidact by nature and always curious about the inner workings of our world.&lt;/p&gt;

&lt;p&gt;I was born and mostly educated in France and having experienced the Italian life for 10 years, I decided to move to England through a job opportunity in February 2010.&lt;/p&gt;

&lt;p&gt;I have been using Linux systems since 2001 as a means to be closer to the Operating System and have a better understanding on what is really going on.
Whenever I run into something of interest, I try to understand it and can quickly end up spending a good amount of time on the subject.&lt;/p&gt;

&lt;p&gt;For me it is essential to understand how things work in life as there is no magic and mostly everything to date has an explanation.
Life is a beautiful and mysterious thing that is full of surprise and continuous learning/inquiring is required to be able to discover new things which could make it better.&lt;/p&gt;

&lt;p&gt;With this blog I would like to share some of my knowledge and the ongoing process that I go through to acquire more.
I will share with you the books that I am reading and what I thought about them, the new technologies that I have been studying/playing with and various other topics.&lt;/p&gt;

&lt;h3 id=&#34;a-selection-of-my-current-interests&#34;&gt;A selection of my current interests&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Infrastructure As Code / Continuous Delivery&lt;/li&gt;
&lt;li&gt;Cloud computing&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Philosophy&lt;/li&gt;
&lt;li&gt;History&lt;/li&gt;
&lt;li&gt;Science&lt;/li&gt;
&lt;li&gt;Fitness and well-being&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>